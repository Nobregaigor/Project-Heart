{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Geo References"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [],
   "source": [
    "from pathlib import Path\n",
    "from project_heart.lv import LV\n",
    "from project_heart.utils import set_jupyter_backend\n",
    "from project_heart.enums import *\n",
    "\n",
    "set_jupyter_backend(\"pythreejs\")\n",
    "\n",
    "sample_file_ideal = Path(\"../../_static/sample_files/ellipsoid.stl\")\n",
    "lv_ideal = LV.from_file(sample_file_ideal) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Apex and Base Regions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Apex, Base"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lv_ideal.identify_regions(geo_type=LV_GEO_TYPES.IDEAL,\n",
    "                          apex_base_args=dict(ab_ql=0.05, ab_qh=0.97),\n",
    "                          recompute_apex_base=False # for demo purposes\n",
    "                          )\n",
    "lv_ideal.transform_region_to_facet_data(LV_MESH_DATA.APEX_BASE_REGIONS)\n",
    "lv_ideal.plot(\"surface\", \n",
    "        scalars=LV_MESH_DATA.APEX_BASE_REGIONS,\n",
    "        container=\"cells\",\n",
    "        categorical=True,\n",
    "        )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Epicardium, Endocardium and Base regions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lv_ideal.transform_region_to_facet_data(LV_MESH_DATA.EPI_ENDO, method=\"min\")\n",
    "lv_ideal.plot(\"surface\", \n",
    "        scalars=LV_MESH_DATA.EPI_ENDO,\n",
    "        container=\"cells\",\n",
    "        categorical=True,\n",
    "        )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lv_ideal.transform_region_to_facet_data(LV_MESH_DATA.SURFS, method=\"min\")\n",
    "lv_ideal.plot(\"surface\", \n",
    "        scalars=LV_MESH_DATA.SURFS,\n",
    "        container=\"cells\",\n",
    "        categorical=True,\n",
    "        )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Apex and Base Reference Nodes; Longitudinal Line and Normal Vector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lv_ideal.plot_longitudinal_line()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "lv_ideal.set_apex_and_base_from_nodeset(\n",
    "    lv_ideal.REGIONS.ENDO, ql=0.001, qh=0.99)\n",
    "lv_ideal.plot_longitudinal_line()"
   ]
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "a4b270fe5129ef310552b5197d637a230d47119f1e46f0b92ff32b1c5f5c5425"
  },
  "kernelspec": {
   "display_name": "Python 3.9.7 ('project_heart')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
